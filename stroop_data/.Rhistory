subtitle = "means and error bars with jitter"
)
#ggplot of errorbars + jitter
ggplot(df_summary, aes(x = condition, y = mean, color = group)) +
geom_point(size = 5, position = position_dodge(1)) +
geom_errorbar(aes(ymin = mean - sd, ymax = mean + sd), width = .2, position = position_dodge(1)) +
geom_jitter(data = df, aes(y = memory), alpha = .3, width = .3,) +
coord_cartesian(ylim = c(0,100)) +
theme_classic() +
labs(
title = "memory scores",
subtitle = "means and error bars with jitter"
)
#ggplot of errorbars + jitter
ggplot(df_summary, aes(x = condition, y = mean, color = group)) +
geom_point(size = 5, position = position_dodge(1)) +
geom_errorbar(aes(ymin = mean - sd, ymax = mean + sd), width = .2, position = position_dodge(1)) +
geom_jitter(data = df, aes(y = memory), alpha = .3, width = .3, position = position_dodge()) +
coord_cartesian(ylim = c(0,100)) +
theme_classic() +
labs(
title = "memory scores",
subtitle = "means and error bars with jitter"
)
#ggplot of errorbars + jitter
ggplot(df_summary, aes(x = condition, y = mean, color = group)) +
geom_point(size = 5, position = position_dodge(1)) +
geom_errorbar(aes(ymin = mean - sd, ymax = mean + sd), width = .2, position = position_dodge(1)) +
geom_jitter(data = df, aes(y = memory), alpha = .3, width = .3, position = position_dodge(1)) +
coord_cartesian(ylim = c(0,100)) +
theme_classic() +
labs(
title = "memory scores",
subtitle = "means and error bars with jitter"
)
#ggplot of errorbars + jitter
ggplot(df_summary, aes(x = condition, y = mean, color = group)) +
geom_point(size = 5, position = position_dodge(1)) +
geom_errorbar(aes(ymin = mean - sd, ymax = mean + sd), width = .2, position = position_dodge(1)) +
geom_jitter(data = df, aes(y = memory), alpha = .3, position = position_dodge(1)) +
coord_cartesian(ylim = c(0,100)) +
theme_classic() +
labs(
title = "memory scores",
subtitle = "means and error bars with jitter"
)
#ggplot of errorbars + jitter
ggplot(df_summary, aes(x = condition, y = mean, color = group)) +
geom_point(size = 5, position = position_dodge(1)) +
geom_errorbar(aes(ymin = mean - sd, ymax = mean + sd), width = .2, position = position_dodge(1)) +
geom_jitter(data = df, aes(y = memory), alpha = .3, width = .3) +
coord_cartesian(ylim = c(0,100)) +
theme_classic() +
labs(
title = "memory scores",
subtitle = "means and error bars with jitter"
)
#ggplot of errorbars + jitter
ggplot(df_summary, aes(x = condition, y = mean, color = group)) +
geom_point(size = 5, position = position_dodge(1)) +
geom_errorbar(aes(ymin = mean - sd, ymax = mean + sd), width = .2, position = position_dodge(1)) +
geom_jitter(data = df, aes(y = memory), alpha = .3, width = .1) +
coord_cartesian(ylim = c(0,100)) +
theme_classic() +
labs(
title = "memory scores",
subtitle = "means and error bars with jitter"
)
#ggplot of errorbars + jitter
ggplot(df_summary, aes(x = condition, y = mean, color = group)) +
geom_point(size = 5, position = position_dodge(1)) +
geom_errorbar(aes(ymin = mean - sd, ymax = mean + sd), width = .2, position = position_dodge(1)) +
geom_jitter(data = df, aes(y = memory), alpha = .3, position = position_jitter(width = .1)) +
coord_cartesian(ylim = c(0,100)) +
theme_classic() +
labs(
title = "memory scores",
subtitle = "means and error bars with jitter"
)
#ggplot of errorbars + jitter
ggplot(df_summary, aes(x = condition, y = mean, color = group)) +
geom_point(size = 5, position = position_dodge(1)) +
geom_errorbar(aes(ymin = mean - sd, ymax = mean + sd), width = .2, position = position_dodge(1)) +
geom_jitter(data = df, aes(y = memory), alpha = .3, position = position_jitter(width = .3)) +
coord_cartesian(ylim = c(0,100)) +
theme_classic() +
labs(
title = "memory scores",
subtitle = "means and error bars with jitter"
)
#ggplot of errorbars + jitter
ggplot(df_summary, aes(x = condition, y = mean, color = group)) +
geom_point(size = 5, position = position_dodge(1)) +
geom_errorbar(aes(ymin = mean - sd, ymax = mean + sd), width = .2, position = position_dodge(1)) +
geom_jitter(data = df, aes(y = memory), alpha = .3, position = position_jitterdodge(width = .3)) +
coord_cartesian(ylim = c(0,100)) +
theme_classic() +
labs(
title = "memory scores",
subtitle = "means and error bars with jitter"
)
#ggplot of errorbars + jitter
ggplot(df_summary, aes(x = condition, y = mean, color = group)) +
geom_point(size = 5, position = position_dodge(1)) +
geom_errorbar(aes(ymin = mean - sd, ymax = mean + sd), width = .2, position = position_dodge(1)) +
geom_jitter(data = df, aes(y = memory), alpha = .3, position = position_jitterdodge()) +
coord_cartesian(ylim = c(0,100)) +
theme_classic() +
labs(
title = "memory scores",
subtitle = "means and error bars with jitter"
)
#ggplot of errorbars + jitter
ggplot(df_summary, aes(x = condition, y = mean, color = group)) +
geom_point(size = 5, position = position_dodge(1)) +
geom_errorbar(aes(ymin = mean - sd, ymax = mean + sd), width = .2, position = position_dodge(1)) +
geom_jitter(data = df, aes(y = memory), alpha = .3, position = position_jitter()) +
coord_cartesian(ylim = c(0,100)) +
theme_classic() +
labs(
title = "memory scores",
subtitle = "means and error bars with jitter"
)
#ggplot of errorbars + jitter
ggplot(df_summary, aes(x = condition, y = mean, color = group)) +
geom_point(size = 5, position = position_dodge(1)) +
geom_errorbar(aes(ymin = mean - sd, ymax = mean + sd), width = .2, position = position_dodge(1)) +
geom_jitter(data = df, aes(y = memory), alpha = .3, position = position_jitterdodge()) +
coord_cartesian(ylim = c(0,100)) +
theme_classic() +
labs(
title = "memory scores",
subtitle = "means and error bars with jitter"
)
ggerrorplot(
data = df,
x = "condition",
y = "memory",
color = "group",
desc_stat = "mean_sd",
add = c("mean", "jitter"),
add.params = list(alpha = .3, size = 1),
error.plot = "errorbar"
) +
coord_cartesian(ylim = c(0, 100))
#ggplot of errorbars + jitter
ggplot(df_summary, aes(x = condition, y = mean, color = group)) +
geom_point(size = 5, position = position_dodge(1)) +
geom_errorbar(aes(ymin = mean - sd, ymax = mean + sd), width = .2, position = position_dodge(1)) +
geom_jitter(data = df, aes(y = memory), alpha = .3, position = position_jitterdodge()) +
coord_cartesian(ylim = c(0,100)) +
theme_classic() +
labs(
title = "memory scores",
subtitle = "means and error bars with jitter"
)
#ggplot of errorbars + jitter
ggplot(df_summary, aes(x = condition, y = mean, color = group)) +
geom_point(size = 5, position = position_dodge(1)) +
geom_errorbar(aes(ymin = mean - sd, ymax = mean + sd), width = .2, position = position_dodge(1)) +
geom_jitter(data = df, aes(y = memory), alpha = .3, position = position_jitterdodge()) +
coord_cartesian(ylim = c(0,100)) +
facet_wrap(~condition, ncol = 2)
#ggplot of errorbars + jitter
ggplot(df_summary, aes(x = condition, y = mean)) +
geom_point(size = 5, position = position_dodge(1)) +
geom_errorbar(aes(ymin = mean - sd, ymax = mean + sd), width = .2, position = position_dodge(1)) +
geom_jitter(data = df, aes(y = memory), alpha = .3, position = position_jitterdodge()) +
coord_cartesian(ylim = c(0,100)) +
facet_wrap(~condition, ncol = 2)
#ggplot of errorbars + jitter
ggplot(df_summary, aes(x = condition, y = mean, color = condition)) +
geom_point(size = 5, position = position_dodge(1)) +
geom_errorbar(aes(ymin = mean - sd, ymax = mean + sd), width = .2, position = position_dodge(1)) +
geom_jitter(data = df, aes(y = memory), alpha = .3, position = position_jitterdodge()) +
coord_cartesian(ylim = c(0,100)) +
facet_wrap(~condition, ncol = 2)
#ggplot of errorbars + jitter
ggplot(df_summary, aes(x = condition, y = mean, color = group)) +
geom_point(size = 5, position = position_dodge(1)) +
geom_errorbar(aes(ymin = mean - sd, ymax = mean + sd), width = .2, position = position_dodge(1)) +
geom_jitter(data = df, aes(y = memory), alpha = .3, position = position_jitterdodge()) +
coord_cartesian(ylim = c(0,100)) +
facet_wrap(~condition, ncol = 2)
#ggplot of errorbars + jitter
ggplot(df_summary, aes(x = condition, y = mean, color = group)) +
geom_point(size = 5, position = position_dodge(1)) +
geom_errorbar(aes(ymin = mean - sd, ymax = mean + sd), width = .2, position = position_dodge(1)) +
geom_jitter(data = df, aes(y = memory), alpha = .3, position = position_jitterdodge()) +
coord_cartesian(ylim = c(0,100)) +
facet_wrap(~condition, ncol = 2)
#ggplot of errorbars + jitter
ggplot(df_summary, aes(x = condition, y = mean, color = group)) +
geom_point(size = 5) +
geom_errorbar(aes(ymin = mean - sd, ymax = mean + sd), width = .2, position = position_dodge(1)) +
geom_jitter(data = df, aes(y = memory), alpha = .3, position = position_jitterdodge()) +
coord_cartesian(ylim = c(0,100)) +
facet_wrap(~condition, ncol = 2)
#ggplot of errorbars + jitter
ggplot(df_summary, aes(x = condition, y = mean, color = group)) +
geom_point(size = 5, position = position_dodge(1)) +
geom_errorbar(aes(ymin = mean - sd, ymax = mean + sd), width = .2, position = position_dodge(1)) +
geom_jitter(data = df, aes(y = memory), alpha = .3, position = position_jitterdodge()) +
coord_cartesian(ylim = c(0,100)) +
facet_wrap(~condition, ncol = 2)
#ggplot of errorbars + jitter
ggplot(df_summary, aes(x = condition, y = mean, color = group)) +
geom_point(size = 5, position = position_dodge(1)) +
geom_errorbar(aes(ymin = mean - sd, ymax = mean + sd), width = .2, position = position_dodge(1)) +
geom_jitter(data = df, aes(y = memory), alpha = .3, position = position_jitterdodge()) +
coord_cartesian(ylim = c(0,100)) +
facet_wrap(~group, ncol = 2)
#ggplot of errorbars + jitter
ggplot(df_summary, aes(x = condition, y = mean, color = condition)) +
geom_point(size = 5, position = position_dodge(1)) +
geom_errorbar(aes(ymin = mean - sd, ymax = mean + sd), width = .2, position = position_dodge(1)) +
geom_jitter(data = df, aes(y = memory), alpha = .3, position = position_jitterdodge()) +
coord_cartesian(ylim = c(0,100)) +
facet_wrap(~group, ncol = 2)
#ggplot of errorbars + jitter
ggplot(df_summary, aes(x = condition, y = mean, color = group)) +
geom_point(size = 5, position = position_dodge(1)) +
geom_errorbar(aes(ymin = mean - sd, ymax = mean + sd), width = .2, position = position_dodge(1)) +
geom_jitter(data = df, aes(y = memory), alpha = .3, position = position_jitterdodge()) +
coord_cartesian(ylim = c(0,100)) +
theme_classic() +
labs(
title = "memory scores",
subtitle = "means and error bars with jitter"
)
#ggplot of errorbars + jitter
ggplot(df_summary, aes(x = condition, y = mean, color = group)) +
geom_point(size = 5, position = position_dodge(1)) +
geom_errorbar(aes(ymin = mean - sd, ymax = mean + sd), width = .2, position = position_dodge(1)) +
geom_jitter(data = df, aes(y = memory), alpha = .3, position = position_jitterdodge()) +
coord_cartesian(ylim = c(0,100)) +
theme_classic() +
labs(
title = "memory scores",
subtitle = "means and error bars with jitter"
)
#ggplot of errorbars + jitter
ggplot(df_summary, aes(x = condition, y = mean, color = group)) +
geom_point(size = 5, position = position_dodge(1)) +
geom_errorbar(aes(ymin = mean - sd, ymax = mean + sd), width = .2, position = position_dodge(1)) +
geom_jitter(data = df, aes(y = memory), alpha = .3, position = position_jitterdodge()) +
coord_cartesian(ylim = c(0,100)) +
labs(
title = "memory scores",
subtitle = "means and error bars with jitter"
)
#ggplot of errorbars + jitter
ggplot(df_summary, aes(x = condition, y = mean, color = group)) +
geom_point(size = 5, position = position_dodge(1)) +
geom_errorbar(aes(ymin = mean - sd, ymax = mean + sd), width = .2, position = position_dodge(1)) +
geom_jitter(data = df, aes(y = memory), alpha = .3, position = position_jitterdodge()) +
coord_cartesian(ylim = c(0,100)) +
theme_classic() +
labs(
title = "memory scores",
subtitle = "means and error bars with jitter"
)
#ggplot of errorbars + jitter
ggplot(df_summary, aes(x = condition, y = mean, color = condition)) +
geom_point(size = 5, position = position_dodge(1)) +
geom_errorbar(aes(ymin = mean - sd, ymax = mean + sd), width = .2, position = position_dodge(1)) +
geom_jitter(data = df, aes(y = memory), alpha = .3, position = position_jitterdodge()) +
coord_cartesian(ylim = c(0,100)) +
theme_classic() +
facet_wrap(~group, ncol = 2)
#ggplot of errorbars + jitter
ggplot(df_summary, aes(x = condition, y = mean, color = condition)) +
geom_point(size = 5, position = position_dodge(1)) +
geom_errorbar(aes(ymin = mean - sd, ymax = mean + sd), width = .2, position = position_dodge(1)) +
geom_jitter(data = df, aes(y = memory), alpha = .3, position = position_jitterdodge()) +
coord_cartesian(ylim = c(0,100)) +
facet_wrap(~group, ncol = 2)
#ggplot of errorbars + jitter
ggplot(df_summary, aes(x = condition, y = mean, color = condition)) +
geom_point(size = 5, position = position_dodge(1)) +
geom_errorbar(aes(ymin = mean - sd, ymax = mean + sd), width = .2, position = position_dodge(1)) +
geom_jitter(data = df, aes(y = memory), alpha = .3, position = position_jitterdodge()) +
coord_cartesian(ylim = c(0,100)) +
theme_classic() +
facet_wrap(~group, ncol = 2)
#ggplot of errorbars + jitter
ggplot(df_summary, aes(x = condition, y = mean, color = condition)) +
geom_point(size = 5, position = position_dodge(1)) +
geom_errorbar(aes(ymin = mean - sd, ymax = mean + sd), width = .2, position = position_dodge(1)) +
geom_jitter(data = df, aes(y = memory), alpha = .3, position = position_jitterdodge()) +
coord_cartesian(ylim = c(0,100)) +
theme_classic() +
facet_wrap(~group, ncol = 2) +
labs(
title = "memory scores",
subtitle = "means and error bars with jitter"
)
#ggplot of errorbars + jitter
ggplot(df_summary, aes(x = condition, y = mean, color = condition)) +
geom_point(size = 5, position = position_dodge(1)) +
geom_errorbar(aes(ymin = mean - sd, ymax = mean + sd), width = .2, position = position_dodge(1)) +
geom_jitter(data = df, aes(y = memory), alpha = .3, position = position_jitterdodge()) +
coord_cartesian(ylim = c(0,100)) +
theme_classic() +
facet_wrap(~group, ncol = 2)
#ggplot of errorbars + jitter
ggplot(df_summary, aes(x = condition, y = mean, color = condition)) +
geom_point(size = 5, position = position_dodge(1)) +
geom_errorbar(aes(ymin = mean - sd, ymax = mean + sd), width = .2, position = position_dodge(1)) +
geom_jitter(data = df, aes(y = memory), alpha = .3, position = position_jitterdodge()) +
coord_cartesian(ylim = c(0,100)) +
theme_classic() +
facet_wrap(~group, ncol = 2) +
labs(
title = "memory scores",
subtitle = "means and error bars with jitter"
)
#ggplot of errorbars + jitter
ggplot(df_summary, aes(x = condition, y = mean, color = group)) +
geom_point(size = 5, position = position_dodge(1)) +
geom_errorbar(aes(ymin = mean - sd, ymax = mean + sd), width = .2, position = position_dodge(1)) +
geom_jitter(data = df, aes(y = memory), alpha = .3, position = position_jitterdodge()) +
coord_cartesian(ylim = c(0,100)) +
theme_classic() +
facet_wrap(~group, ncol = 2) +
labs(
title = "memory scores",
subtitle = "means and error bars with jitter"
)
#ggplot of errorbars + jitter
ggplot(df_summary, aes(x = condition, y = mean, color = condition)) +
geom_point(size = 5, position = position_dodge(1)) +
geom_errorbar(aes(ymin = mean - sd, ymax = mean + sd), width = .2, position = position_dodge(1)) +
geom_jitter(data = df, aes(y = memory), alpha = .3, position = position_jitterdodge()) +
coord_cartesian(ylim = c(0,100)) +
theme_classic() +
facet_wrap(~group, ncol = 2) +
labs(
title = "memory scores",
subtitle = "means and error bars with jitter"
)
#ggplot of errorbars + jitter
ggplot(df_summary, aes(x = condition, y = mean, color = condition)) +
geom_point(size = 5, position = position_dodge(1)) +
geom_errorbar(aes(ymin = mean - sd, ymax = mean + sd), width = .2, position = position_dodge(1)) +
geom_jitter(data = df, aes(y = memory), alpha = .3, position = position_jitterdodge()) +
coord_cartesian(ylim = c(0,100)) +
theme_classic() +
labs(
title = "memory scores",
subtitle = "means and error bars with jitter"
)
#ggplot of errorbars + jitter
ggplot(df_summary, aes(x = condition, y = mean, color = group)) +
geom_point(size = 5, position = position_dodge(1)) +
geom_errorbar(aes(ymin = mean - sd, ymax = mean + sd), width = .2, position = position_dodge(1)) +
geom_jitter(data = df, aes(y = memory), alpha = .3, position = position_jitterdodge()) +
coord_cartesian(ylim = c(0,100)) +
theme_classic() +
labs(
title = "memory scores",
subtitle = "means and error bars with jitter"
)
x <- rnorm(50, 100, 50)
x = (x - mean(x)) / sd(x)
#scale function
x_standard = scale(x)
#scale function
x_standard = scale(x)
x <- rnorm(50, 100, 50)
#scale function
x_standard = scale(x)
#manual standardization of x
x_manual_standard = (x - mean(x)) / sd(x)
x <- rnorm(50, 0, 1); y <- rnorm(50, 0, 1)  # יצירת משתנים רציפים
plot(x, y)  # שרטוט scatterplot
x <- rnorm(50, 10, 1); y <- rnorm(50, 0, 1)  # יצירת משתנים רציפים
plot(x, y)  # שרטוט scatterplot
abline(lm(y ~ x), col = "red")  # הוספת קו רגרסיה
plot(x, y)  # שרטוט scatterplot
abline(lm(y ~ x), col = "red")  # הוספת קו רגרסיה
abline(lm(y ~ x), col = "red")  # הוספת קו רגרסיה
plot(x, y)  # שרטוט scatterplot
abline(lm(y ~ x), col = "red")  # הוספת קו רגרסיה
abline(lm(y ~ x), col = "red")  # הוספת קו רגרסיה
abline(coef = c(2, 5))
plot(x, y)  # שרטוט scatterplot
abline(coef = c(2, 5))
abline(coef = c(2, 8))
abline(coef = c(2, 10))
abline(coef = c(-3, 10))
abline(coef = c(9, 10))
abline(lm(y ~ x), col = "red")  # הוספת קו רגרסיה
abline(coef = c(9, 10))
abline(a = 0)
abline(a = 0, b = 9)
plot(x, y)  # שרטוט scatterplot
abline(a = 0, b = 9)
abline(coef = lm(y ~ x), col = "red")  # הוספת קו רגרסיה
plot(x, y)  # שרטוט scatterplot
abline(coef = lm(y ~ x), col = "red")  # הוספת קו רגרסיה
abline(lm(y ~ x), col = "red")  # הוספת קו רגרסיה
abline(a = -80, b = 9)
abline(a = -70, b = 9)
abline(a = -100, b = 9)
abline(a = -100, b = 8)
abline(a = -80, b = 2)
abline(a = -80, b = 5)
abline(a = -800, b = 1)
abline(lm(y ~ x), col = "red")  # הוספת קו רגרסיה
plot(x, y)  # שרטוט scatterplot
abline(lm(y ~ x), col = "red")  # הוספת קו רגרסיה
rm(list = ls())
setwd("./stroop_data")
load("filtered_data.RData")
library(lme4)
View(filtered_data)
lmer(filtered_data$rt ~ task * congruency + (1|subject), data = filtered_data )
lmer(filtered_data$rt ~ task * congruency + (1|subject), data = filtered_data )
help('isSingular')
contrasts(filtered_data$congruency)
#clearing environment and loading data
rm(list = ls())
setwd("./stroop_data")
setwd("stroop_data")
library(dplyr)
library(tools)
library(dplyr)
library(tools)
#binding data to collected_data
collected_data <- data.frame()
for (subjects_data in dir()) {
if(file_ext(subjects_data) == "csv") {
collected_data <- rbind(collected_data, read.csv(subjects_data))
}
else{
message(paste("Skipping non-CSV file:", subjects_data))
}
}
#converting to raw data
raw_data <- collected_data |>
mutate(
congruency = factor(ifelse(grepl("_cong", condition), "congruent", "incongruent")),
task = factor(ifelse(grepl("reading", condition), "word_reading", "ink_labeling")),
accuracy = if_else(correct_response == participant_response, 1, 0),
trial = as.numeric(trial),
block = as.numeric(block),
rt = as.numeric(rt)
) |>
select(subject, block, trial, congruency, task, accuracy, rt)
#converting to raw data
raw_data <- collected_data |>
mutate(
congruency = factor(ifelse(grepl("_cong", condition), "congruent", "incongruent")),
task = factor(ifelse(grepl("reading", condition), "word_reading", "ink_labeling")),
accuracy = if_else(correct_response == participant_response, 1, 0),
trial = as.numeric(trial),
block = as.numeric(block),
rt = as.numeric(rt)
) |>
select(subject, block, trial, congruency, task, accuracy, rt)
#checking for conversion problems on independent variables
ifelse(sum(is.na(raw_data$congruency)) > 0, "congruency variable generation failed", "congruency variable generation worked")
ifelse(sum(is.na(raw_data$task) > 0), "task variable generation failed", "task variable generation worked")
#assigning contrasts
contrasts(raw_data$congruency) <- contr.treatment(levels(raw_data$congruency), base = which(levels(raw_data$congruency) == "congruent"))
contrasts(raw_data$task) <- contr.treatment(levels(raw_data$task), base = which(levels(raw_data$task) == "word_reading"))
#save raw_data
save(raw_data, file = "raw_data.RData")
#clearing environment and loading data
rm(list = ls())
setwd("./stroop_data")
load("raw_data.RData")
library(dplyr)
print(paste("number of subjects is:", length(unique(raw_data$subject))))
#filtering out NA data
filtered_data <- na.omit(raw_data)
#filtering out rt times
filtered_data <- filtered_data |>
filter(rt > 300, rt < 3000)
#statistics of removed data
raw_data |>
group_by(subject) |>
summarise(original_amount = n()) |>
full_join(
filtered_data |>
group_by(subject) |>
summarise(filtered_amount = n())
) |>
reframe(
subject,
trial_after_filter_percentage = filtered_amount/original_amount,
mean_filtered = mean(filtered_amount/original_amount),
sd_filtered = sd(filtered_amount/original_amount)
)
#save filtered data
save(filtered_data, file = "filtered_data.RData")
rm(list = ls())
setwd("./stroop_data")
load("filtered_data.RData")
library(lme4)
lmer(filtered_data$rt ~ task * congruency + (1|subject), data = filtered_data )
model = lmer(filtered_data$rt ~ task * congruency + (1|subject), data = filtered_data )
summary(model)
contrasts(filtered_data$congruency)
fixef(model)
ranef(model)
model2 = lmer(filtered_data$rt ~ task * congruency + (task * congruency|subject), data = filtered_data)
summary(model2)
fixef(model2)
ranef(model2)
anova(model, model2)
